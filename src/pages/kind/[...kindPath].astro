---
// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/


// import { ListingDetails } from '~/helpers/listing-page.js'
import { getPathPartsFromAstroRequest } from '~/helpers/url.js'
import { catchRedirectResponse } from '~/helpers/astro/request.js'

import Layout from '../../layouts/default.astro'
import Listing from '../../components/default-listing.astro'

// const {
//   appPath
// } = Astro.params



// Get type and slug from the request path
// so that we don't have extra parts for
// urls like /:type/:slug/benchmarks
const pathParts = getPathPartsFromAstroRequest( Astro.request )

// Create an empty API URL
const apiUrl = new URL( import.meta.env.PUBLIC_API_DOMAIN )

// Use request path parts to set api url path
// apiUrl.pathname = `/api/${ pathType }/${ pathSlug }.json`


// Astro Request reference
// https://docs.astro.build/en/reference/api-reference/#astrorequests

// console.log('Astro.params', Astro.params )
// console.log('Astro.request.url', Astro.request.url )
// console.log('Astro.site.pathname', Astro.site.pathname )
// console.log('Astro.request', Astro.request )

// const appListing = await axios.get( apiUrl.toString() )
//     .then( response => {
//         // console.log( 'response', response )
//         return response.data
//     })

// const listingDetails = new ListingDetails( appListing )


const redirectResponse = await catchRedirectResponse( Astro )

if ( redirectResponse !== null ) {
  return redirectResponse
}

---
<Layout
    headOptions={{
        title: 'Test',
        description: 'Test',
        // meta,
        // link,
        // structuredData: this.structuredData,

        // domain,
        pathname: '/test',
    }}
>

    Kind: { JSON.stringify( pathParts ) }
</Layout>
